grammar org.softlang.megal.Megamodel with org.eclipse.xtext.xbase.Xtype

import "http://www.eclipse.org/xtext/common/JavaVMTypes"
import "http://www.eclipse.org/emf/2002/Ecore"
generate megamodel "http://www.softlang.org/megal/Megamodel"

/**
 * A model is basically a list of facts
 */
Model returns Facts:
	{Model} imports=XImportSection? items+=Fact*;

	/**
	 * A statement connects three parameterized instances
	 */
Fact:
	from+=Exp (',' from+=Exp)* predicate=Exp to+=Exp (',' to+=Exp)*;

	/**
	 * A parameterized instance is a terminal that has arguments
	 */
Exp returns Exp:
	Term ({Par.on=current} '(' (items+=Exp (',' items+=Exp)*)? ')')*;

	/**
	 * The intrinsics or terminals:
	 * - A list of facts
	 * - A list of items
	 * - A type reference
	 * - Symbols and names
	 */
Term returns Exp:
	{Facts} '{' items+=Fact* '}'
	| {Type} 'jvm' '(' type=JvmTypeReference ')'
	| {Name} name=QualifiedName
	| {Text} value=STRING
	| {Number} value=INT
	| {Op} op=Symbol;

	/**
	 * Symbols that may be overloaded
	 */
enum Symbol:
	COLON=':'
	| CONTINUED='..'
	| ASSING='='
	| IMPLIES='->'
	| LEFT_IMPLIES='<-'
	| MAPPEDTO=':->'
	| LEFT_MAPPEDTO='<-:'
	| PLUS='+'
	| MINUS='-'
	| TIMES='*'
	| DIVIDED='/'
	| AND='&&'
	| OR='||'
	| SETMINUS='\\'
	| INTO='>>'
	| LEFT_INTO='<<'
	| GREATER='>'
	| GREATER_EQUALS='>='
	| EQUALS='=='
	| NOT_EQUALS='!='
	| LESS_EQUALS='<='
	| LESS='<';

terminal INT returns EInt:
	'1'..'9' '0'..'9'*;