package org.softlang.megal.query

import "http://www.eclipse.org/emf/2002/Ecore"
import "http://softlang.wikidot.com/megal"

pattern allEntityTypes(A : Declaration, B : EntityType) = {
// Include the direct entity types
	Declaration.entityTypes(A, B);
} or {
// Find an import C, that points to a declaration D, continue with this D
	Declaration.imports(A, C);
	PointerDeclarationRef(C);
	PointerDeclarationRef.refered(C, D);
	find allEntityTypes(D, B);
}

pattern allEntities(A : Declaration, B : Entity) = {
// Include the direct entities
	Declaration.entities(A, B);
} or {
// Find an import C, that points to a declaration D, continue with this D
	Declaration.imports(A, C);
	PointerDeclarationRef(C);
	PointerDeclarationRef.refered(C, D);
	find allEntities(D, B);
}

pattern allRelationTypes(A : Declaration, B : RelationType) = {
// Include the direct relation types
	Declaration.relationTypes(A, B);
} or {
// Find an import C, that points to a declaration D, continue with this D
	Declaration.imports(A, C);
	PointerDeclarationRef(C);
	PointerDeclarationRef.refered(C, D);
	find allRelationTypes(D, B);
}

pattern allRelations(A : Declaration, B : Relation) = {
// Include the direct relations
	Declaration.relations(A, B);
} or {
// Find an import C, that points to a declaration D, continue with this D
	Declaration.imports(A, C);
	PointerDeclarationRef(C);
	PointerDeclarationRef.refered(C, D);
	find allRelations(D, B);
}