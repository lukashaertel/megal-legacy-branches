// automatically generated by Xtext
grammar org.softlang.megal.MegaL with org.eclipse.xtext.common.Terminals

import "http://softlang.wikidot.com/megal"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

/**
 * Mega models
 */
Declaration:
// Not required to be specified, inferred else
	('model' overrideName=QualifiedID ('configured' 'in' configuration=QualifiedID)?)? (
	// Model imports
	'import' imports+=[Declaration|QualifiedID] |
	// Instance declarations
	relations+=Relation | entities+=Entity |
	// Type declarations
	relationTypes+=RelationType | entityTypes+=EntityType |
	// Sugar
	sugar+=Sugar)*;

	/**
	 * Declares an entity
	 */
Entity:
	(isParameter?='?' | isDependent?='!')? name=QualifiedID ('[' representativeName=STRING ']')? ':' type=Declared
	// Optional generic section
	('[' generics+=[Entity|QualifiedID] ('->' generics+=[Entity|QualifiedID])* ']')?;

	/**
	 * Declares a relation
	 */
Relation:
	from=[Entity|QualifiedID] type=[RelationType|QualifiedID] to=[Entity|QualifiedID];

	/**
	 * Declares an entity type
	 */
EntityType:
	name=QualifiedID ('=' isTop?='top' | '<' supertype=Declared);

Declared:
	definition=[EntityType|QualifiedID] isMany?="+"?;

	/**
	 * Declares a relation type
	 */
RelationType:
	name=QualifiedID '<' fromDomain=Declared '*' toDomain=Declared;

	/**
	 * Declarations especiale
	 */
Sugar:
	FunctionApplication;

	/**
	 * Function application with input and output
	 */
FunctionApplication:
// TODO: Can someone justify this notation?
	name=QualifiedID '(' input=[Entity|QualifiedID] ')' '|' '->' output=[Entity|QualifiedID];

QualifiedID:
	ID ('.' ID)*;