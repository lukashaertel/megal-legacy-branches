// automatically generated by Xtext
grammar org.softlang.megal.MegaL with org.eclipse.xtext.common.Terminals

import "http://softlang.wikidot.com/megal"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

/**
 * Mega models
 */
Declaration:
// Not required to be specified, inferred else
	('model' overrideName=QualifiedID ('configured' 'in' configuration=QualifiedID)?)? (
	// Model imports
	'import' imports+=AbstractDeclarationRef |
	// Instance declarations
	relations+=Relation | entities+=Entity |
	// Type declarations
	relationTypes+=RelationType | entityTypes+=EntityType |
	// Sugar
	sugar+=Sugar)*;

AbstractDeclarationRef:
	PreludeDeclarationRef | PointerDeclarationRef;

PreludeDeclarationRef:
	{PreludeDeclarationRef} 'Prelude';

PointerDeclarationRef:
	refered=[Declaration|QualifiedID];

	/**
	 * Declares an entity
	 */
Entity:
	(isParameter?='?' | isDependent?='!')? name=QualifiedID ('[' representativeName=STRING ']')? ':'
	type=AbstractEntityTypeRef
	// Optional generic section
	('[' generics+=AbstractEntityRef ('->' generics+=AbstractEntityRef)* ']')?;

AbstractEntityRef:
	PointerEntityRef;

PointerEntityRef:
	refered=[Entity|QualifiedID];

	/**
	 * Declares a relation
	 */
Relation:
	from=AbstractEntityRef type=AbstractRelationTypeRef to=AbstractEntityRef;

	/**
	 * Declares an entity type
	 */
EntityType:
	name=QualifiedID '<' supertype=AbstractEntityTypeRef;

	/**
	 * Use of an entity type
	 */
AbstractEntityTypeRef:
	TopEntityTypeRef | PointerEntityTypeRef;

	/**
	 * Top entity type that is not explicitly declared
	 */
TopEntityTypeRef:
	{TopEntityTypeRef} 'Entity' isMany?="+"?;

	/**
	 * Reference to a declared entity type
	 */
PointerEntityTypeRef:
	refered=[EntityType|QualifiedID] isMany?="+"?;

	/**
	 * Declares a relation type
	 */
RelationType:
	name=QualifiedID '<' fromDomain=AbstractEntityTypeRef '*' toDomain=AbstractEntityTypeRef;

	/**
	 * Use of a relation type
	 */
AbstractRelationTypeRef:
	PointerRelationTypeRef;

	/**
	 * Reference to a declared relation type
	 */
PointerRelationTypeRef:
	refered=[RelationType|QualifiedID];

	/**
	 * Declarations especiale
	 */
Sugar:
	FunctionApplication;

	/**
	 * Function application with input and output
	 */
FunctionApplication:
// TODO: Can someone justify this notation?
	name=QualifiedID '(' input=AbstractEntityRef ')' '|' '->' output=AbstractEntityRef;

QualifiedID:
	ID ('.' ID)*;